---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import PlayIcon from "@/icons/PlayIcon.astro";
import Heart from "@/icons/Heart.astro";
import Shuffle from "@/icons/Shuffle.astro";

---


<Layout title="PlayBeat">
	<div class=" flex flex-col w-full   text-white">
		<Header/>
		<div class=" w-full h-full flex flex-row mt-16 p-4  px-14">
            <section class="flex flex-col justify-start">
                <input type="file" id="addFoto" name="photo" class=" text-white p-2 rounded-md hidden" onchange="previewImage(event)" />
                <div class=" w-60 aspect-square  cursor-pointer bg-[#333] rounded-md border-2 border-[#c5c5c5] flex justify-center items-center" onclick="document.getElementById('addFoto').click();">
                    <img id="preview" class="w-64 aspect-square rounded-md hidden" />
                    <svg  xmlns="http://www.w3.org/2000/svg"  width="70"  height="70"  viewBox="0 0 24 24"  fill="none"  stroke="#c5c5c5"  stroke-width="1"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-photo"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 8h.01" /><path d="M3 6a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-12z" /><path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l5 5" /><path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0l3 3" /></svg>
                </div>
            </section>
            <div class="flex flex-col ml-6 self-center gap-1 mt-16 w-full">
                <span class="font-medium"></span>
                <div class="flex flex-row items-center ">
                    <input type="text" id="playlistName" class="text-4xl font-semibold appearance-none bg-background outline-none  " placeholder="Nombre de playlist"/>
                    <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-pencil"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" /><path d="M13.5 6.5l4 4" /></svg>    
                </div>
                <h2 class="text-2xl font-semibold text-[#6985C0] ">@user1111</h2>
                <div class="flex flex-row items-center ">
                    <input type="text" id="playlistDescription" class="opacity-70 appearance-none bg-background outline-none " placeholder="DescripciÃ³n de la playlist"/>
                    <svg  xmlns="http://www.w3.org/2000/svg"  class=" opacity-70"width="16"  height="16"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="1.75"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-pencil"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4" /><path d="M13.5 6.5l4 4" /></svg>
                </div>
                <div>
                    <label for="private">Privado</label>
                    <input type="checkbox" name="private" id="private"/>
                </div>
            </d>
			
		</div>
	</div>

</Layout>
<script is:inline>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function(){
            var output = document.getElementById('preview');
            output.style.display = 'block';
            output.src = reader.result;
        };
        reader.readAsDataURL(event.target.files[0]);
    }
    const inputs = [document.getElementById('playlistName'), document.getElementById('playlistDescription')];

    inputs.forEach(input => {
        input.addEventListener('input', function() {
            const inputValueLength = this.value.length;
            const placeholderLength = this.placeholder.length;
            const maxLength = Math.max(inputValueLength, placeholderLength);
            if (this.id === 'playlistName') {
                this.style.width = ((maxLength + 1) * 20) + 'px';
            } else if (this.id === 'playlistDescription') {
                this.style.width = ((maxLength + 1) * 8) + 'px';
            }
        });
    });
</script>

