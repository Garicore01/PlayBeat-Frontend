---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

const profile ={name: 'P', items:['item1111111111111','item2', 'item3']}
const canciones = [{name:"Ultimo escuchado", items:["Cancion1", "Cancion2", "Cancion3", "Cancion4", "Cancion5", "Cancion6", "Cancion7", "Cancion8", "Cancion9", "Cancion10", "Cancion11", "Cancion12", "Cancion13", "Cancion14", "Cancion15", "Cancion16", "Cancion17", "Cancion18", "Cancion19", "Cancion20", "Cancion21", "Cancion22", "Cancion23", "Cancion24", "Cancion25", "Cancion26", "Cancion27", "Cancion28", "Cancion29", "Cancion30", "Cancion31", "Cancion32", "Cancion33", "Cancion34", "Cancion35", "Cancion36", "Cancion37", "Cancion38", "Cancion39", "Cancion40", "Cancion41", "Cancion42", "Cancion43", "Cancion44", "Cancion45", "Cancion46", "Cancion47", "Cancion48", "Cancion49", "Cancion50", "Cancion51", "Cancion52", "Cancion53", "Cancion54", "Cancion55", "Cancion56", "Cancion57", "Cancion58", "Cancion59", "Cancion60", "Cancion61", "Cancion62", "Cancion63", "Cancion64", "Cancion65", "Cancion66", "Cancion67", "Cancion68", "Cancion69", "Cancion70", "Cancion71", "Cancion72", "Cancion73", "Cancion74", "Cancion75", "Cancion76", "Cancion77", "Cancion78", "Cancion79", "Cancion80", "Cancion81", "Cancion82", "Cancion83", "Cancion84", "Cancion85", "Cancion86", "Cancion87", "Cancion88", "Cancion89", "Cancion90", "Cancion91", "Cancion92", "Cancion93"]},
{name:"Para ti", items:["Cancion1", "Cancion2", "Cancion3", "Cancion4", "Cancion5",]},
{name:"Podcast", items:["Cancion1", "Cancion2", "Cancion3", "Cancion4", "Cancion5"]}]

---

<Layout title="PlayBeat">
	<div class=" flex flex-col w-full  items-center  text-white">
		<header class=" flex flex-row justify-between items-center w-4/6 h-16  font-bold text-3xl text-[#6985C0] px-8 fixed  bg-[#242423] bg-opacity-70">
			<div class="flex fle-row gap-2">
				<button onclick="window.history.back();">
					<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="white" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 6l-6 6l6 6" /></svg>
				</button>
				<button  onclick="window.history.forward();">
					<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="white" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 6l6 6l-6 6" /></svg>
				</button>
			</div>
			<h1>PlayBeat</h1>
			<div class="div text-lg " >
				<button class="button solid flex items-center justify-center" >{profile.name}</button>
				<button class="buttonOculto solid flex items-center justify-center">{profile.name}</button>
				<div class="dropdown">
					{profile.items.map( (item) => {
						return <span>{item}</span>
					})}
				</div>
			</div>
		</header>
		<div class=" w-full flex flex-col mt-16 p-6">
			{canciones.map( (element) =>
				<section class="h-[340px] ">
					<header class="flex flex-row items-center ">
						<h2 class=" text-lg font-medium">{element.name}</h2>
						<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-right ml-2" width="20" height="20" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 6l6 6l-6 6" /></svg>
					</header>
					<div class="flex flex-row items-center mt-2">
						<div class=" w-16">
							<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-compact-left " width="60" height="60" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M13 20l-3 -8l3 -8" /></svg>
						</div>
						<ul class="h-full flex w-full flex-row gap-10 overflow-x-auto snap-x snap-mandatory scroll-smooth  carrusel">
							{element.items.map( (name) => 
									<li class="flex flex-col w-full items-center snap-start cards">
										<div class=" w-[200px] h-[200px] bg-black rounded-md">
										</div>
										<p>{name}</p>
									</li>
							)}
						</ul>
						<div class=" w-16">
							<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-compact-right " width="60" height="60" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M11 4l3 8l-3 8" /></svg>

						</div>
						
					</div>
				</section>
			)}	
			
		</div>
	</div>
	<script>
		// Selecciona los elementos SVG y el carrusel
		const leftArrow = document.querySelectorAll('.icon-tabler-chevron-compact-left');
		const rightArrow = document.querySelectorAll('.icon-tabler-chevron-compact-right');
		const carrusel = document.querySelectorAll('.carrusel') as NodeListOf<HTMLElement>;
		if(leftArrow && rightArrow && carrusel){
		
		    for(let i = 0; i < carrusel.length; i++) {
				let count = 0;
				let width = carrusel[i].offsetWidth;
				leftArrow[i].addEventListener('click', () => {
					carrusel[i].scrollBy({ left: -width, behavior: 'smooth' });
				});
			
				rightArrow[i].addEventListener('click', () => {
					carrusel[i].scrollBy({ left: width, behavior: 'smooth' });
				});
			}
		}
	  </script>
</Layout>


<style>

.carrusel{
	scrollbar-width: none;
}



.button {
    background-color: black;
    border: 2px solid black;
    border-radius: 30px;
	width: 30px;
	height: 30px;
    border: none;
    color: white;
    font-weight: semibold;
    cursor: pointer;
    padding: 8px;
}
.buttonOculto {
    background-color: black;
    border: 2px solid black;
    border-radius: 30px;
	width: 30px;
	height: 30px;
    border: none;
    color: white;
    font-weight: semibold;
    cursor: pointer;
    padding: 8px;
	display:none;
}

  
  
.div {
  position: relative;
  display: inline-block;
}

.dropdown {
  display: none;
  position: absolute;
  background-color: #2f2f2f;

  min-width: 100px;
  border-radius: 10px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 100;
}

.dropdown span {
  color: white;

  padding: 12px 16px;

  text-decoration: none;
  display: flex;
  cursor: pointer;
  font-weight: normal;
  font-size: medium;
}

.dropdown span{
  border-top: .5px solid white;

}
.dropdown span:first-child{
  border-top: 0px;
  border-top-left-radius:10px;
  border-top-right-radius:10px;
}
.dropdown span:last-child{

  border-bottom-left-radius:10px;
  border-bottom-right-radius:10px;
}

.dropdown span:hover {background-color: #6e6e6e;}

.button:focus ~ .dropdown {display: flex; flex-direction: column;}
.button:focus ~ .buttonOculto {display: flex; position:absolute; top: 0; left: 0;}




</style>