---
import Layout from '../layouts/Layout.astro';
import Carrousel from '@components/Carrousel.astro';
import Header from '@components/Header.astro';
import {getUserLastAudios} from '@/utils/getUserLastAudios.ts';
import CarrouselLast from '@components/CarrouselLast.astro';
import { getLastAudiosUploaded } from '@/utils/getLastAudiosUploaded';
import CarrouselUser from '@components/CarrouselUser.astro';


const token = Astro.cookies.get("token")?.value as string

let lastAudios;
let lastPodcastUploaded;
try {
	let [responseLast, responesLastUploaded] = await Promise.all([
    getUserLastAudios(token, 15),
    getLastAudiosUploaded(token)
]);

lastAudios = responseLast.data;
lastPodcastUploaded = responesLastUploaded.data.podcast;
	
} catch (error) {
	console.error("Error")
}	


const idAudioSet = new Set<number>();

// Crea un nuevo array para almacenar los elementos sin duplicados
const vectorSinDuplicados: typeof lastAudios.podcast = [];

// Itera sobre el vector original
for (const item of lastAudios.podcast) {
    // Si el idAudio no está en el Set, añádelo
    if (!idAudioSet.has(item.idAudio)) {
        // Añade el idAudio al Set
        idAudioSet.add(item.idAudio);
        // Añade el elemento al nuevo array
        vectorSinDuplicados.push(item);
    }
}
---

<Layout title="PlayBeat">
	<div class=" flex flex-col w-full   text-white">
		<Header/>
		<div class=" w-full h-full flex flex-col mt-16 p-1">
			<h1 class="text-bluePB text-5xl font-semibold ml-10">PODCAST</h1>
			<section class="mt-10 w-full">
				<h2 class="text-lg font-semibold ml-10">Últimos escuchados</h2>
				<CarrouselLast  info={vectorSinDuplicados}/>
			</section>
			<section class="mt-10 w-full">
				<h2 class="text-lg font-semibold ml-10">Últimos escuchados</h2>
				<CarrouselUser  audios={lastPodcastUploaded}/>
			</section>
			<!-- {Podcasts.map( (element) =>
				{
					return <Carrousel info={element} />
				}
			)}	 -->
			
		</div>
	</div>

</Layout>

