---
import Layout from '@layouts/Layout.astro';

import Header from '@components/Header.astro';
import HeaderUser from '@components/HeaderUser.astro';
import TopFive from '@components/TopFive.astro';
import CarrouselUser from '@components/CarrouselUser.astro';
import { getFollowers } from '@/utils/getFollowers';
import { userTopSongs } from '@/utils/userTopSongs';
import { getSongsUser } from "@/utils/getSongsUser";
import { getPodcastUser } from "@/utils/getPodcastUser";
import {getPlaylistsFromUser} from '@/utils/getPlaylistsFromUser';

// import { getUserAudios } from '@/utils/getUserAudios';  
import { Global } from "@/globalState/globalUrl.js";
import CarrouselListas from '@components/CarrouselListas.astro';

const { id } = Astro.params


let user;
let canciones;
let cancionesAll = [];
let podcastAll = [];
let albumsAll = [];


try{
    const jws = Astro.cookies.get('token');
    if(jws !==null && jws !== undefined){
        
        // const responseFollowers = await getFollowers(jws.value, "444");
        const responseFollowers = await getFollowers(jws.value, id);
        user = responseFollowers.data;


        // const responseTop = await userTopSongs(jws.value, 444, 5);
        const responseTop = await userTopSongs(jws.value, Number(id), 5);
        canciones = responseTop.data;
        // console.log(responseTop.data);

        // const responseLast = await getUserAudios(jws.value, Number(id));

        // const responseCanciones = await getSongsUser(444);
        const responseCanciones = await getSongsUser(Number(id));
        cancionesAll = responseCanciones.data.cancion;

        const responsePodcast = await getPodcastUser(Number(id));
        // const responsePodcast = await getPodcastUser(id);
        podcastAll = responsePodcast.data.podcast;


        const responseAlbums = await getPlaylistsFromUser(Number(id),jws.value);

        albumsAll = responseAlbums.data;
        albumsAll = albumsAll.filter(lista => lista.tipoLista === 'NORMAL' && lista.esAlbum === true);

    }
   

} catch (error) {
    if (error instanceof TypeError) {
        console.log('Error: ', error.message);
    } else {
        console.log('Error: ', error);
    }

}

const followers = user.Seguidores;
const following = user.Seguidos;


const fecha = new Date(user.ultimoLanzamiento.fechaLanz);

// Extrae el día, mes y año de la fecha
const dia = String(fecha.getDate()).padStart(2, '0');
const mes = String(fecha.getMonth() + 1).padStart(2, '0');
const anio = fecha.getFullYear();

// Formatea la fecha como DD-MM-YYYY
const fechaFormateada = `${dia}-${mes}-${anio}`;


---

<Layout title="PlayBeat">

	<div class=" flex flex-col w-full   text-white">
		<Header/>
		<div class=" w-full h-full flex flex-col mt-16">
            {id && <HeaderUser nombre={user.nombreUsuario} email={user.email} img={user.imgPerfil} followers={followers} following={following} id={Number(id)}/>}
			<div class="px-16 mt-10 flex flex-row flex-wrap">
                <section class="w-4/6">
                    <h2 class="text-2xl font-semibold">Top canciones</h2>
                    <div>
                        <TopFive info={canciones}/>
                    </div>
                </section>
                <section class=" w-1/8 flex flex-col items-start justify-between ml-16">
                    <div >
                        <h2 class="text-2xl font-semibold -ml-2">Último lanzamiento</h2>
                        <div class="bg-black w-44 h-44 rounded-md mt-4">
                            <img src={`${Global.url}foto/${user.ultimoLanzamiento.imgAudio}`} class="w-full h-full object-cover rounded-md" alt="Ultimo lanzamiento"/>
                            <div class="flex flex-col my-2 mb-3">
                                <h3 class="font-bold">{user.ultimoLanzamiento.titulo}</h3>
                                <p>{fechaFormateada}</p>
                            </div>
                        </div>
                    </div>
                    <hr class=" border-white border-0.5 w-[180px] mt-16"/>
                    <div class="mt-3">
                        <h2 class="text-2xl font-semibold -ml-1 ">Popularidad</h2>
                        <span >{user.oyentesMensuales} oyentes mensuales</span>
                    </div>
                </section>
                {
                    cancionesAll.length > 0 && 
                    <section class="mt-10 w-full">
                        <h2 class="text-2xl font-semibold ">Discografia</h2>
                            <h3 class="font-semibold text-lg">Canciones</h3>
                            <CarrouselUser audios={cancionesAll} />
                        
                     </section>
                }
                {
                    albumsAll.length > 0 &&
                    <section>
                        <h3 class="font-medium text-lg">Albums</h3>
                        <CarrouselListas artista={user.nombreUsuario} artistaId={Number(id)} audios={albumsAll} />
                    </section>
                }
                
                {
                    podcastAll.length > 0 &&
                
                    <section class="mt-10 w-full">
                        <h2 class="text-lg font-medium ">Podcast</h2>
                        <CarrouselUser  audios={podcastAll}/>
                    </section>}
            </div>
		</div>
	</div>

</Layout>




