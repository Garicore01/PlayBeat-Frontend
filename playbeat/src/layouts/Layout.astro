---
// import Library from '@components/Library.astro';
// import Queue from '@components/Queue.astro';
// import {Player} from '@components/Player';
import Library from '../components/LeftBar.astro';
import Queue from '../components/RightBar.astro';
import {Player} from '../components/Player';
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="PlayBeat" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/logo_blanco.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions/>
	</head>
	<body>
		<div id="app" class="relative min-h-screen ">
			<aside class="[grid-area:aside1] ">
				<Library />
			</aside>
			<main
			class="[grid-area:main] overflow-y-scroll ">
			<slot />
		  </main>
		<aside class="[grid-area:aside2] ">
			<Queue />
		</aside>

		<footer class="[grid-area:player] h-[72px]">
			<Player client:load transition:name="media-player" transition:persist >
				<div class="">
					<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-list queue transition rounded-[3px]" width="24" height="24" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 6l11 0" /><path d="M9 12l11 0" /><path d="M9 18l11 0" /><path d="M5 6l0 .01" /><path d="M5 12l0 .01" /><path d="M5 18l0 .01" /></svg>
				</div>
			</Player>
		  </footer>
	</body>
	<script>
		const queue = document.querySelector('.queue') as HTMLElement;
		const app = document.querySelector('#app') as HTMLElement;
		let isClicked = true;
		if(queue && app){
			
			queue.addEventListener('click', () => {
				isClicked = !isClicked;
				queue.style.color = isClicked ? "#6985C0" : "white";
				queue.style.backgroundColor = isClicked ? "#606060a4" : "";
				app.style.gridTemplateColumns = isClicked ? "repeat(5, 1fr) 1fr" : "repeat(5, 1fr) 0px";
			});
		}
	</script>
</html>

<style>
	#app {
	  display: grid;
	  grid-template-areas:
		"aside1 main main main main aside2"
		"player player player player player player ";
	  grid-template-columns: repeat(5, 1fr) 1fr;
	  grid-template-rows: calc(100vh - 72px) 72px;
	}
	.queue{

	}
  </style>
<style is:global>
	
	
	html {
		font-family: system-ui, sans-serif;
		background: #242423;
		background-size: 224px;
	}
	
</style>
