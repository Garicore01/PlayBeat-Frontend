---
import type { Audio } from "@/interfaces";
import SongOpt from "./SongOpt.astro";
import { Global } from "@/globalState/globalUrl";
interface Info {
[x: string]: any;
    idUsuario: number,
      idAudio: number,
      fecha: string,
      Audio: Audio
}

interface Props {
	info: Info;
    
}
 

const { info} = Astro.props;

const nume = 4;

const itemsSongOpt = ["Añadir cola", "Añadir a playlist", "Añadir a favoritos", "Descargar", "Eliminar"];

---

<section>
    
    <div class="flex flex-row items-center ">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-compact-left opacity-0 hover:opacity-100 transition-opacity cursor-pointer" width="40" height="60" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M13 20l-3 -8l3 -8" /></svg>
        <ul class=" flex flex-row w-full overflow-x-auto snap-x snap-mandatory scroll-smooth  carrusel">
            {info.map( (item: { idAudio: any; Audio: {
[x: string]: any; imgAudio: any; 
}; audio: unknown; descripcion: unknown; }) => 
                    <li class="flex flex-col p-2 snap-start text-sm h-full hijo  w-max-1/5">
                        <a href=`/audio/${item.idAudio}` class="  relative inline-block imagen">
                            <img src={`${Global.url}foto/${item.Audio.imgAudio}`} class:list={[" w-full rounded-md mb-1 hover:brightness-90"]}/>
                        </a>

                        <a href=`/audio/${item.Audio.idAudio}` class=" w-max hover:underline">
                            <p class="text-base hover:underline">{item.Audio.titulo}</p>
                        </a>
                        <div class="flex flex-row">
                        {
                            item.Audio.artistas && item.Audio.artistas.map((artista: { idUsuario: any; nombreUsuario: string; }, index: number) => 
                                <a href=`/user/${artista.idUsuario}` class="w-max hover:underline mr-1">
                                    <p class="text-gray-400">{( item.Audio.artistas && index == item.Audio.artistas?.length-1  )? artista.nombreUsuario : artista.nombreUsuario + ', '}</p>
                                </a>
                            )
                        }
                        </div>

                    </li>
            )}
        </ul>

            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-compact-right opacity-0 hover:opacity-100 transition-opacity cursor-pointer" width="40" height="60" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M11 4l3 8l-3 8" /></svg>
        
    </div>

	  
          
 
</section>


<style define:vars={{nume}}>
    .carrusel{
	scrollbar-width: none;
	--ancho-padre: 100%;
}
.hijo{
	min-width: calc(var(--ancho-padre) / var(--nume));
}




</style>

