---
import { createAudio } from '@/utils/createAudio';
import { uploadImg } from '@/utils/uploadImg';
import TagsTabs from '@components/TagsTabs.astro';
import {TOKEN} from '@/constants.ts'
import { createPlaylist } from '@/utils/createPlaylist';
import { getInfoPlaylist } from '@/utils/getInfoPlaylist';
import { Global } from '@/globalState/globalUrl';

interface Props {
    title: string
}

const {title} = Astro.props

const {id} = Astro.params
const token = Astro.cookies.get(TOKEN);

let playlist: any
let idImg: any
try{
    if(id !== undefined){

        playlist = await getInfoPlaylist(parseInt(id), token?.value)
        playlist = playlist.data
        idImg = playlist.imgLista

    }

}catch(e){
    console.log(e)
}


---

<div class="flex flex-col gap-3 px-8">
    <h2 class="text-xl font-medium">{title}</h2>
    <form class="flex flex-col items-center gap-3 pt-4" method="POST" novalidate>
        <div class="flex flex-row items-center w-full gap-3">

            <section class="flex flex-col">
                <input type="file" id="addFoto" name="photo" class=" text-white p-2 rounded-md hidden" onchange="previewImage(event)" />
                <div class=" w-64 aspect-square mt-2 cursor-pointer bg-[#333] rounded-md border-2 border-[#c5c5c5] flex justify-center items-center" onclick="document.getElementById('addFoto').click();">
                    <img id="preview" class="w-64 aspect-square rounded-md" src={`${Global.url}foto/${idImg}`}/>
                    <svg  xmlns="http://www.w3.org/2000/svg"  width="70"  height="70"  viewBox="0 0 24 24"  fill="none"  stroke="#c5c5c5"  stroke-width="1"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-photo"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M15 8h.01" /><path d="M3 6a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v12a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3v-12z" /><path d="M3 16l5 -5c.928 -.893 2.072 -.893 3 0l5 5" /><path d="M14 14l1 -1c.928 -.893 2.072 -.893 3 0l3 3" /></svg>
                </div>
            </section>
            <section class="h-64 flex flex-col items-start gap-4">
                <div class="h-20 flex flex-row justify-start gap-4">

                    <div class="flex flex-col gap-1">
                        <label>Nombre del album</label>
                        <input type="text" name="name" class="w-80 h-10 rounded-md bg-[#333] border-2 border-[#c5c5c5] text-white p-2 outline-none" placeholder="Nombre" value={playlist != null ? playlist.nombre : ""}/>
                    </div>

                </div>
                <div class="self-center flex fle-row items-center gap-4">
                    <button id="eliminar" class="text-lg h-10 font-medium bg-[#ff0000d1] text-grey px-2 py-1 rounded-sm">Eliminar</button>
                    <button class=" bg-bluePB px-4 h-10  justify-self-center py-1 rounded-sm " id="guardar">Guardar</button>
                </div>
            </section>
        </div>
        <table class="mt-8 table-auto w-full">
            <thead class="opacity-60">
                <tr class="text-left">
                    <th class="pb-2 pl-3">Canción</th>
                    <th>Artista</th>
                    <th></th>
                    <th class="max-w-6">Duración</th>
                </tr>
            </thead>
            <tbody class="border-t-[1px] border-white border-opacity-60 audiosPlaylist">
                {playlist && playlist?.Audios?.map((cancion:any) => (
                    <tr class=" hover:bg-[#323232] select-none" id={cancion.idAudio} onclick=`document.location = 'audioFromAlbum/${cancion.idAudio}';` >
                        <td class="py-3 pl-3 flex flex-row items-center gap-3">
                            <img class=" h-12 aspect-square bg-black rounded-[4px]" src={Global.url + "foto/" + cancion.imgAudio}/>
                            {cancion.titulo}
                            </td>
                        <td class="py-3">                                
                            {cancion.Artistas?.map((artista:any, index:any) => {
                                    if(index == cancion.Artistas.length-1){
                                        return artista.nombreUsuario
                                    }else{
                                        return artista.nombreUsuario + ', '
                                    }
                                })}
                        </td>
                        <td class="py-3" >{cancion.album}</td>
                        <td class="py-3 max-w-6 ">{() => {
                        function convertirSegundos(segundos:any) {
                            let horas = Math.floor(segundos / 3600);
                            segundos %= 3600;
                            let minutos = Math.floor(segundos / 60);
                            segundos %= 60;
                            let res = ""
                            if(horas >0 ){
                                res+= horas + ":"
                            }
                            if(minutos >0 ){
                                if(minutos < 10){
                                    res+= "0"
                                }
                                res+= minutos + ":"
                            }
                            if(segundos >0 ){
                                if(segundos < 10){
                                    res+= "0"
                                }
                                res+= segundos

                            }else{
                                res += "00"
                            }
                            return res
                        }
                        return convertirSegundos(cancion.duracionSeg);
                    }}</td>
                    </tr>
                ))
                }
            </tbody>
        </table>
        <button class=" bg-bluePB px-4 py-1 rounded-sm " id="Añadir" > Añadir audio</button>
    </form>

</div>
<script is:inline>
    function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function(){
            var output = document.getElementById('preview') ;
            if(output != null){
                output.style.display = 'block';
                output.src = reader.result ;
            }

        };
        reader.readAsDataURL(event.target.files[0]);
    }
</script>
<script >
    import { editPlaylist } from "@/utils/editPlaylist";
    import { Global } from "@/globalState/globalUrl";
    import { modAudio } from "@/utils/modAudio";
    import { uploadImg } from "@/utils/uploadImg";

  function getCookie(name: any) {
    let cookieArr = document.cookie.split("; ");
    
    for(let i = 0; i < cookieArr.length; i++) {
        let cookiePair = cookieArr[i].split("=");
        
        if(name == cookiePair[0]) {
            return decodeURIComponent(cookiePair[1]);
        }
    }
  }
  document.addEventListener("astro:page-load", () => {
    let changeFoto = false
    const preview = document.getElementById("preview") as HTMLImageElement
    let fotoAlbum = preview.src.split("/")[preview.src.split("/").length - 1]

    preview?.addEventListener("click", async (e) => {
        changeFoto = true
    })
    const token = getCookie('token')
    document.getElementById("guardar")?.addEventListener("click", async (e) => {
        e.preventDefault();
        const data = new FormData(document.querySelector("form") as HTMLFormElement);
        let img = document.getElementById("preview") as HTMLImageElement;
        let idImg = img.src.split("/")[img.src.split("/").length - 1]
        let currentUrl = window.location.href;
        let id = currentUrl.split("/")[currentUrl.split("/").length - 1]
        if(changeFoto){
            const idAudios = document.querySelectorAll(".audiosPlaylist tr")
            let ids = Array.from(idAudios).map((audio: any) => audio.id);
            const file = data.get("photo")
            let res = await uploadImg(file, token)
            idImg = res.id
            for(let value of ids){
                await modAudio({
                    img: idImg
                }, token, value)
            }
        }
        await editPlaylist({
            nombre: data.get("name") as string,
            descripcion: data.get("descripcion") as string || "",
            esPrivada: data.get("esPrivada") as string == "on" || false,
            imgLista: idImg,
            esAlbum: true,
            tipoLista: "NORMAL",
        }, token, id)


    });
    const eliminar = document.getElementById("eliminar")
    const idAudios = document.querySelectorAll(".audiosPlaylist tr")
    let ids = Array.from(idAudios).map((audio: any) => audio.id);
    eliminar?.addEventListener("click", (e) => {
        e.preventDefault()
        let pathArray = window.location.pathname.split('/');
        let id = pathArray[pathArray.length - 1];
        if(id !== undefined){ 
            fetch(`${Global.url}lista/${id}`, {
                method: "DELETE",
                headers: {
                    "Authorization": `Bearer ${token}`
                }
            }).then(() => window.history.go(-1)).catch((e) => console.log(e))
            for(let value of ids){
                fetch(`${Global.url}audio/delete/${value}`, {
                method: "DELETE",
                headers: {
                    "Authorization": `Bearer ${token}`
                }
            }).catch((e) => console.log(e))
            }
        }
    })
    document.getElementById("Añadir")?.addEventListener("click", (e) => {
        e.preventDefault()
        window.location.href = window.location.pathname + `/addAudio`; 
        document.cookie = "fotoAlbum=" + fotoAlbum + "; path=/"; 

    })
    })
  
</script>