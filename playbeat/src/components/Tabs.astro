---
const tabsItem = [
  { id: 'Preview', label: 'Preview', content: "Comp" },
  { id: 'Code', label: 'Code', content: "Code" },
];

interface Props{
    subject: string;
    component: string;
    class?: string;
}

const {subject, class:className} = Astro.props;

---


<div class="tabsNav ">
  {tabsItem.map((tab, index)=> {
    return   (
    
      <input type="radio" name={"tabs"+subject} id={tab.id+subject}  checked={index == 0}>
      <label for={tab.id+subject} >{tab.label}</label>
    
    )
  })}
  {tabsItem.map((tab)=> {
    return   (
      
        <div class={className}>{tab.content == "Comp" ? <span>cola</span> : <span>historial</span>}</div>
      
    )
  })}
</div>



<style>

/*Contiene todo el sistema de tabs*/
.tabsNav{
position: relative;

}
/*Las pestañas: cabecera inputs y labels*/ 
.tabsNav {
display:block;
position:relative;
width:100%;
}

.tabsNav  input{
display:none;
}
.tabsNav  label{
display:inline-block;
position:relative;
z-index:10;
width: 75px;
text-align: center;
color: lightgray;
margin-bottom: 10px;
cursor: pointer;
}
/*Etiquetas de pestañas individuales*/
.tabsNav label:nth-of-type(1){
left: 0;
}

.tabsNav .div:nth-of-type(1) {
  padding: 30px;
}
.tabsNav .div:nth-of-type(2) {
  background-color: #1e1e1f;
  
}

/*Las pestañas contenido dentro de los tabs*/
.tabsNav div{
display:none;
border: 1px solid #d6d4d4;
text-align:justify;
border-radius: 5px;
--tw-border-opacity: 1;
border-color: rgb(71 85 105 / var(--tw-border-opacity));
}
/*Etiquetas pulsadas*/
.tabsNav  input:checked + label
{
color: white;
border: 2px solid #;
}

.tabsNav input:nth-of-type(1):checked ~ div:nth-of-type(1){
  display:block;

}
.tabsNav input:nth-of-type(2):checked ~ div:nth-of-type(2){
  display:block;

}
</style>
  